////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Grid system
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// Container widths
//
// Set the container width
.container {
    .container-fixed(@grid-gutter-width);
    @media( min-width: @screen-sm-min ) {
        .container-fixed(@grid-gutter-width-sm);
    }
    @media( min-width: @screen-md-min ) {
        .container-fixed(@grid-gutter-width-md);
    }
}

// Fluid container
//
// Utilizes the mixin meant for fixed width containers, but without any defined
// width for fluid, full width layouts.
.container-fluid{
    .container-fluid();
    @media( min-width: @screen-sm-min ) {
        .container-fluid(@grid-gutter-width-sm);
    }
    @media( min-width: @screen-md-min ) {
        .container-fluid(@grid-gutter-width-md);
    }
}

// Row
//
// Rows contain and clear the floats of your columns.
.row {
    .make-row();
    &:extend(.clearfix all);
}
.row-flex {
    .make-row-flex();
}

// Columns
//
// Common styles for small and large grid columns
.make-grid-columns();

// Breakpoint-specific padding
[class^=col-],
[class*=col-] {
    position: relative;
    width: 100%;
    display: inline-block;
    float: left;

    @media( min-width: @screen-sm-min ) {
        padding-left: @grid-gutter-width-sm / 2;
        padding-right: @grid-gutter-width-sm / 2;
    }
    @media( min-width: @screen-md-min ) {
        padding-left: @grid-gutter-width-md / 2;
        padding-right: @grid-gutter-width-md / 2;
    }
}

.row.row-flex [class^=col-],
.row.row-flex [class*=col-] {
    float: none;
}
// Extra small grid
//
// Columns, offsets, pushes, and pulls for extra small devices like
// smartphones.
.make-grid(xs);

// Small grid
//
// Columns, offsets, pushes, and pulls for the small device range, from phones
// to tablets.
@media (min-width: @screen-sm-min) {
    .make-grid(sm);
}

// Medium grid
//
// Columns, offsets, pushes, and pulls for the desktop device range.
@media (min-width: @screen-md-min) {
    .make-grid(md);
}

// Large grid
//
// Columns, offsets, pushes, and pulls for the large desktop device range.
@media (min-width: @screen-lg-min) {
    .make-grid(lg);
}
