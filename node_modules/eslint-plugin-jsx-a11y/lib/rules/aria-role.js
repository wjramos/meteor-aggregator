/**
 * @fileoverview Enforce aria role attribute is valid.
 * @author Ethan Cohen
 */
'use strict';

// ----------------------------------------------------------------------------
// Rule Definition
// ----------------------------------------------------------------------------

var _role = require('../util/attributes/role');

var _role2 = _interopRequireDefault(_role);

var _getAttributeValue = require('../util/getAttributeValue');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var errorMessage = 'Elements with ARIA roles must use a valid, non-abstract ARIA role.';

module.exports = function (context) {
  return {
    JSXAttribute: function JSXAttribute(attribute) {
      var normalizedName = attribute.name.name.toUpperCase();
      if (normalizedName !== 'ROLE') {
        return;
      }

      var value = (0, _getAttributeValue.getLiteralAttributeValue)(attribute);

      // If value is undefined, then the role attribute will be dropped in the DOM.
      // If value is null, then getLiteralAttributeValue is telling us that the value isn't in the form of a literal.
      if (value === undefined || value === null) {
        return;
      }

      var normalizedValues = String(value).toUpperCase().split(' ');
      var validRoles = Object.keys(_role2.default).filter(function (role) {
        return _role2.default[role].abstract === false;
      });
      var isValid = normalizedValues.every(function (value) {
        return validRoles.indexOf(value) > -1;
      });

      if (isValid === true) {
        return;
      }

      context.report({
        node: attribute,
        message: errorMessage
      });
    }
  };
};

module.exports.schema = [{ type: 'object' }];