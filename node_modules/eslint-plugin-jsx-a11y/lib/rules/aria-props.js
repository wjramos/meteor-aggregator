/**
 * @fileoverview Enforce all aria-* properties are valid.
 * @author Ethan Cohen
 */
'use strict';

// ----------------------------------------------------------------------------
// Rule Definition
// ----------------------------------------------------------------------------

var _ARIA = require('../util/attributes/ARIA');

var _ARIA2 = _interopRequireDefault(_ARIA);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var errorMessage = function errorMessage(name) {
  return name + ': This attribute is an invalid ARIA attribute.';
};

module.exports = function (context) {
  return {
    JSXAttribute: function JSXAttribute(attribute) {
      var name = attribute.name.name;
      var normalizedName = name.toUpperCase();

      // `aria` needs to be prefix of property.
      if (normalizedName.indexOf('ARIA-') !== 0) {
        return;
      }

      var isValid = Object.keys(_ARIA2.default).indexOf(normalizedName) > -1;

      if (isValid === false) {
        context.report({
          node: attribute,
          message: errorMessage(name)
        });
      }
    }
  };
};

module.exports.schema = [{ type: 'object' }];